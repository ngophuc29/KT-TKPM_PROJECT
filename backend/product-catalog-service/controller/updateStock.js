const ProductModel = require("../models/ProductModel");

async function updateStock(req, res) {
    try {
        // L·∫•y productId v√† stock m·ªõi t·ª´ URL params
        const productId = req.params.id;
        const newStock = req.params.stock;

        if (!productId || !newStock || isNaN(newStock)) {
            return res.status(400).json({ message: "‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá: c·∫ßn productId v√† stock h·ª£p l·ªá" });
        }

        console.log("üîÑ Updating stock for Product ID:", productId);
        console.log("üì¶ New Stock:", newStock);

        // C·∫≠p nh·∫≠t l·∫°i tr∆∞·ªùng stock c·ªßa s·∫£n ph·∫©m
        const updatedProduct = await ProductModel.findByIdAndUpdate(
            productId,
            { $set: { stock: Number(newStock) } },
            { new: true, runValidators: true }
        );

        if (!updatedProduct) {
            return res.status(404).json({ message: "‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m" });
        }

        res.status(200).json({
            message: "‚úÖ C·∫≠p nh·∫≠t stock s·∫£n ph·∫©m th√†nh c√¥ng!",
            data: updatedProduct
        });
    } catch (error) {
        console.error("üö® L·ªói khi c·∫≠p nh·∫≠t stock s·∫£n ph·∫©m:", error);
        res.status(500).json({ message: "‚ùå L·ªói server khi c·∫≠p nh·∫≠t stock s·∫£n ph·∫©m", error: error.message });
    }
}

module.exports = updateStock;
